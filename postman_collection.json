{
  "info": {
    "name": "REST API - Reservations & CSV Parser",
    "description": "API for managing reservations and parsing CSV files with authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    console.log('Token saved:', response.token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Login and receive JWT token (automatically saved to collection variable)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Reservations",
      "item": [
        {
          "name": "Get Reservations by Amenity and Date",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reservations/amenities/1?date=1593648000",
              "host": ["{{baseUrl}}"],
              "path": ["reservations", "amenities", "1"],
              "query": [
                {
                  "key": "date",
                  "value": "1593648000",
                  "description": "Unix timestamp in seconds (day at 00:00)"
                }
              ]
            },
            "description": "Get all reservations for a specific amenity on a specific day. Returns sorted by start time ascending."
          },
          "response": []
        },
        {
          "name": "Get Reservations by User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reservations/users/2",
              "host": ["{{baseUrl}}"],
              "path": ["reservations", "users", "2"]
            },
            "description": "Get all reservations for a specific user, grouped by days"
          },
          "response": []
        }
      ]
    },
    {
      "name": "CSV Parser",
      "item": [
        {
          "name": "Parse CSV File (Authenticated)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "csv/Amenity (1).csv",
                  "description": "CSV file to parse"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/csv/parse",
              "host": ["{{baseUrl}}"],
              "path": ["csv", "parse"]
            },
            "description": "Upload and parse a CSV file. Requires authentication. First row should contain headers, delimiter is semicolon (;)"
          },
          "response": []
        },
        {
          "name": "Parse CSV File (No Auth - Should Fail)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "csv/Amenity (1).csv"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/csv/parse",
              "host": ["{{baseUrl}}"],
              "path": ["csv", "parse"]
            },
            "description": "Example request without authentication - should return 401"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3001/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3001",
          "path": [""]
        },
        "description": "Check if the server is running"
      },
      "response": []
    }
  ]
}
